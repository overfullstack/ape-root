{
  "info": {
    "_postman_id": "6d4408f2-0e8e-43dc-9e0e-958825246388",
    "name": "bmp-create-runtime",
    "description": "Phase 3: Order Creation and Runtime Operations\n\nThis collection creates an order, activates it, and performs runtime operations like billing schedule creation and invoicing.\n\nKey Environment Variables Set:\n- accessToken: Authentication token for API access\n- accountId: ID of the created account\n- contactId: ID of the created contact\n- orderId: ID of the created order\n- orderItem1Id, orderItem2Id, etc.: IDs of order items\n- orderCalculationStatus: Status of order calculation\n\nPrerequisites:\n- Persona creation collection must be run first\n- Product and pricing setup must be complete",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "23827434",
    "_collection_link": "https://salesforce-734821.postman.co/workspace/1c6fbe60-fabb-4988-890b-b032cf03e25d/collection/23827434-6d4408f2-0e8e-43dc-9e0e-958825246388?source=collection_link"
  },
  "item": [
    {
      "name": "create-order",
      "item": [
        {
          "name": "Login as SalesOpsRep",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var xml2js = require('xml2js')",
                  "xml2js.parseString(pm.response.text(), { explicitArray: false }, (_, jsonResponse) => {",
                  "  let result = jsonResponse['soapenv:Envelope']['soapenv:Body'].loginResponse.result",
                  "  pm.environment.set(\"accessToken\", result.sessionId)",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {
              "accept": true,
              "content-type": true
            }
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml"
              },
              {
                "key": "SOAPAction",
                "value": "login"
              },
              {
                "key": "charset",
                "value": "UTF-8",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "text/xml",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<env:Envelope xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <env:Body>\n    <n1:login xmlns:n1=\"urn:partner.soap.sforce.com\">\n      <n1:username><![CDATA[{{salesOpsRepUserName}}]]></n1:username>\n      <n1:password><![CDATA[{{commonUserPassword}}]]></n1:password>\n    </n1:login>\n  </env:Body>\n</env:Envelope>"
            },
            "url": {
              "raw": "{{baseUrl}}/services/Soap/u/{{version}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "services",
                "Soap",
                "u",
                "{{version}}"
              ]
            },
            "description": "Step 1: Login as Sales Operations Representative\n\nThis request authenticates as the Sales Ops user to create and manage orders.\n\nSets environment variables:\n- accessToken: Session ID for subsequent API calls\n\nUses environment variables:\n- salesOpsRepUserName: Username for Sales Ops user\n- commonUserPassword: Password for authentication\n- baseUrl: Base URL for API calls\n- version: API version"
          },
          "response": []
        },
        {
          "name": "Account + Contact",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var graphData = pm.response.json().graphs[0];",
                  "",
                  "if (graphData.isSuccessful) {",
                  "  graphData.graphResponse.compositeResponse.forEach(response => ",
                  "    pm.environment.set(response.referenceId + \"Id\", response.body.id))",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "var futureDateTime = moment().add(364, 'days');",
                  "pm.environment.set('$randomFutureDate', futureDateTime.format('YYYY-MM-DD'));",
                  "",
                  "pm.environment.set(\"$attributeName\", \"revoman-attr\");"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"graphs\": [\n    {\n      \"graphId\": \"1\",\n      \"compositeRequest\": [\n        {\n          \"method\": \"POST\",\n          \"url\": \"{{versionPath}}/sobjects/Account\",\n          \"referenceId\": \"account\",\n          \"body\": {\n            \"Name\": \"ReVoman - {{$randomLastName}}\",\n            \"BillingPostalCode\": \"94003\",\n            \"BillingCity\": \"San Mateo\",\n            \"BillingState\": \"CA\",\n            \"BillingStreet\": \"856 Homewood Ave.\",\n            \"BillingCountry\": \"United States\",\n            \"ShippingStreet\": \"856 Homewood Ave.\",\n            \"ShippingPostalCode\": \"94003\",\n            \"ShippingCountry\": \"United States\",\n            \"ShippingState\": \"CA\",\n            \"ShippingCity\": \"San Mateo\"\n          }\n        },\n        {\n          \"method\": \"POST\",\n          \"url\": \"{{versionPath}}/sobjects/Contact\",\n          \"referenceId\": \"contact\",\n          \"body\": {\n            \"AccountId\": \"@{account.id}\",\n            \"FirstName\": \"ReVoman - {{$randomFirstName}}\",\n            \"LastName\": \"{{$randomLastName}}\",\n            \"Email\": \"{{$randomEmail}}\"\n          }\n        }\n      ]\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/composite/graph",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "composite",
                "graph"
              ]
            },
            "description": "Step 2: Create Account and Contact Records\n\nThis request creates a new account and associated contact record using a composite graph API call.\n\nSets environment variables:\n- accountId: ID of the created account\n- contactId: ID of the created contact\n\nUses environment variables:\n- versionPath: API version path\n- Various random variables for data generation"
          },
          "response": []
        },
        {
          "name": "pst-create-order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json()",
                  "pm.environment.set(\"orderId\", jsonData.salesTransactionId);",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require(\"moment\");",
                  "var _ = require('lodash')",
                  "pm.environment.set(\"$currentDate\", moment().format((\"YYYY-MM-DD\")));",
                  "",
                  "var futureDateTime = moment().add(365, 'days');",
                  "pm.environment.set('$randomFutureDate', futureDateTime.format('YYYY-MM-DD'));",
                  "",
                  "pm.environment.set(\"$pricingPref\", \"system\")",
                  "pm.environment.set(\"$unitPrice\", _.random(1, 100));",
                  "pm.environment.set(\"$quantity\", _.random(1, 10));",
                  "pm.environment.set(\"$requestName\", pm.info.requestName)"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"pricingPref\": \"{{$pricingPref}}\",\n  \"configurationPref\": {\n    \"configurationMethod\": \"skip\"\n  },\n  \"graph\": {\n    \"graphId\": \"{{$requestName}}\",\n    \"records\": [\n      {\n        \"referenceId\": \"refOrder\",\n        \"record\": {\n          \"attributes\": {\n            \"type\": \"Order\",\n            \"method\": \"POST\"\n          },\n          \"Status\": \"Draft\",\n          \"AccountId\": \"{{accountId}}\",\n          \"Pricebook2Id\": \"{{standardPricebookId}}\",\n          \"BillToContactId\": \"{{contactId}}\",\n          \"EffectiveDate\": \"2024-11-20\",\n          \"BillingStreet\": \"Block 3, DivyaSree Orion IT/ITES SEZ, Raidurg Village\",\n          \"BillingCity\": \"Hyderabad\",\n          \"BillingState\": \"TS\",\n          \"BillingPostalCode\": \"500032\",\n          \"BillingCountry\": \"India\",\n          \"ShippingStreet\": \"Block 3, DivyaSree Orion IT/ITES SEZ, Raidurg Village\",\n          \"ShippingCity\": \"Hyderabad\",\n          \"ShippingState\": \"TS\",\n          \"ShippingPostalCode\": \"500032\",\n          \"ShippingCountry\": \"India\"\n        }\n      },\n      {\n        \"referenceId\": \"refAppTag\",\n        \"record\": {\n          \"attributes\": {\n            \"type\": \"AppUsageAssignment\",\n            \"method\": \"POST\"\n          },\n          \"AppUsageType\": \"RevenueLifecycleManagement\",\n          \"RecordId\": \"@{refOrder.id}\"\n        }\n      },\n      {\n        \"referenceId\": \"refOrderAction\",\n        \"record\": {\n          \"attributes\": {\n            \"type\": \"OrderAction\",\n            \"method\": \"POST\"\n          },\n          \"OrderId\": \"@{refOrder.id}\",\n          \"Type\": \"Add\"\n        }\n      },\n      {\n        \"referenceId\": \"OrderItem1\",\n        \"record\": {\n          \"attributes\": {\n            \"type\": \"OrderItem\",\n            \"method\": \"POST\"\n          },\n          \"OrderId\": \"@{refOrder.id}\",\n          \"PricebookEntryId\": \"{{oneTimePriceBookEntryId}}\",\n          \"Product2Id\": \"{{oneTimeProductId}}\",\n          \"Quantity\": {{$quantity}},\n          \"UnitPrice\": {{$unitPrice}},\n          \"OrderActionId\": \"@{refOrderAction.id}\"\n        }\n      }\n    ]\n  }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/connect/rev/sales-transaction/actions/place",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "connect",
                "rev",
                "sales-transaction",
                "actions",
                "place"
              ]
            },
            "description": "Step 3: Create Order using Product Sales Transaction (PST)\n\nThis request creates a new order with associated order items using the PST API.\n\nSets environment variables:\n- orderId: ID of the created order\n\nUses environment variables:\n- accountId: Account to associate order with\n- contactId: Contact for billing\n- standardPricebookId: ID of standard price book\n- oneTimePriceBookEntryId: Price book entry for one-time product\n- oneTimeProductId: Product to add to order\n- Various pricing and quantity variables"
          },
          "response": []
        },
        {
          "name": "query-order-and-related-records",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json()",
                  "var orderResult = jsonData.compositeResponse[0].body.records[0]",
                  "pm.environment.set(\"orderCalculationStatus\", orderResult.CalculationStatus)",
                  "",
                  "jsonData.compositeResponse[1].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"orderItem\" + (index + 1) + \"Id\", record.Id)",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.environment.set(\"$orderFieldsToQuery\", \"OrderNumber, CalculationStatus\")",
                  "pm.environment.set(\"$oiFieldsToQuery\", \"Id, OrderItemNumber, NetUnitPrice\")"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"allOrNone\": false,\n  \"compositeRequest\": [\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$orderFieldsToQuery}} FROM Order WHERE Id = '{{orderId}}'\",\n      \"referenceId\": \"order\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$oiFieldsToQuery}} FROM OrderItem WHERE OrderId = '{{orderId}}'\",\n      \"referenceId\": \"orderItems\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/composite",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "composite"
              ]
            },
            "description": "Step 4: Query Order and Related Records\n\nThis request retrieves the created order and its line items to verify creation and capture IDs.\n\nSets environment variables:\n- orderCalculationStatus: Current calculation status of order\n- orderItem1Id, orderItem2Id, etc.: IDs of created order items\n\nUses environment variables:\n- orderId: ID of order to query\n- versionPath: API version path"
          },
          "response": []
        },
        {
          "name": "Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"Status\": \"Activated\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/sobjects/Order/{{orderId}}",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "sobjects",
                "Order",
                "{{orderId}}"
              ]
            },
            "description": "Step 5: Activate Order\n\nThis request changes the order status to Activated, which triggers downstream processes.\n\nUses environment variables:\n- orderId: ID of order to activate\n- accessToken: Authentication token\n- versionPath: API version path"
          },
          "response": []
        }
      ]
    },
    {
      "name": "bs-new-sale",
      "description": "Create and manage billing schedules for the order items. This folder contains requests to generate billing schedules and milestone plans.",
      "item": [
        {
          "name": "Login as BillingOps",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var xml2js = require('xml2js')",
                  "xml2js.parseString(pm.response.text(), { explicitArray: false }, (_, jsonResponse) => {",
                  "  let result = jsonResponse['soapenv:Envelope']['soapenv:Body'].loginResponse.result",
                  "  pm.environment.set(\"accessToken\", result.sessionId)",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {
              "accept": true,
              "content-type": true
            }
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "text/xml"
              },
              {
                "key": "SOAPAction",
                "value": "login"
              },
              {
                "key": "charset",
                "value": "UTF-8",
                "type": "text"
              },
              {
                "key": "Accept",
                "value": "text/xml",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<env:Envelope xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xmlns:env=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <env:Body>\n    <n1:login xmlns:n1=\"urn:partner.soap.sforce.com\">\n      <n1:username><![CDATA[{{billingOpsUserName}}]]></n1:username>\n      <n1:password><![CDATA[{{commonUserPassword}}{{secretToken}}]]></n1:password>\n    </n1:login>\n  </env:Body>\n</env:Envelope>"
            },
            "url": {
              "raw": "{{baseUrl}}/services/Soap/u/{{version}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "services",
                "Soap",
                "u",
                "{{version}}"
              ]
            },
            "description": "Step 6: Login as Billing Operations User\n\nThis request authenticates as the Billing Ops user to manage billing schedules and invoices.\n\nSets environment variables:\n- accessToken: Session ID for subsequent API calls\n\nUses environment variables:\n- billingOpsUserName: Username for Billing Ops user\n- commonUserPassword: Password for authentication\n- secretToken: Additional security token\n- baseUrl: Base URL for API calls\n- version: API version"
          },
          "response": []
        },
        {
          "name": "bt2bs-ia",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"billingScheduleId\", jsonData[0].outputValues.orderId);",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "isAsync",
                "value": "true",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"inputs\": [\n    {\n      \"billingTransactionId\": \"{{orderId}}\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/actions/standard/createBillingSchedulesFromBillingTransaction",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "actions",
                "standard",
                "createBillingSchedulesFromBillingTransaction"
              ],
              "query": [
                {
                  "key": "Authorization",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "Content-Type",
                  "value": "application/json",
                  "disabled": true
                }
              ]
            },
            "description": "Step 7: Create Billing Schedules from Billing Transaction\n\nThis request generates billing schedules for all order items in the transaction.\n\nSets environment variables:\n- billingScheduleId: ID of the created billing schedule\n\nUses environment variables:\n- orderId: Order to create billing schedules for\n- accessToken: Authentication token\n- versionPath: API version path"
          },
          "response": []
        },
        {
          "name": "query-bs-bmp-bmpi",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json()",
                  "",
                  "jsonData.compositeResponse[0].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingSchedule\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingSchedule\" + (index + 1) + \"Status\", record.Status)",
                  "})",
                  "",
                  "jsonData.compositeResponse[1].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingMilestonePlan\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingMilestonePlan\" + (index + 1) + \"Status\", record.Status)",
                  "})",
                  "",
                  "jsonData.compositeResponse[2].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingMilestonePlanItem\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingMilestonePlanItem\" + (index + 1) + \"Status\", record.Status)",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.environment.set(\"$bsFieldsToQuery\", \"Id, Status, BillingMilestonePlanId\")",
                  "pm.environment.set(\"$bmpFieldsToQuery\", \"Id, Status\")",
                  "pm.environment.set(\"$bmpiFieldsToQuery\", \"Id, Status, MilestoneAccomplishmentDate\")"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"allOrNone\": false,\n  \"compositeRequest\": [\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=Select {{$bsFieldsToQuery}} FROM BillingSchedule WHERE ReferenceEntityItemId in (Select Id FROM OrderItem WHERE OrderId = '{{orderId}}')\",\n      \"referenceId\": \"billingScheduleForOrderId\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$bmpFieldsToQuery}} FROM BillingMilestonePlan WHERE ReferenceItemId = '@{billingScheduleForOrderId.records[0].Id}'\",\n      \"referenceId\": \"billingMilestonePlan\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$bmpiFieldsToQuery}} FROM BillingMilestonePlanItem WHERE BillingMilestonePlanId = '@{billingMilestonePlan.records[0].Id}' ORDER BY MilestoneAccomplishmentDate\",\n      \"referenceId\": \"billingMilestonePlanItems\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/composite",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "composite"
              ]
            },
            "description": "Step 8: Query Billing Schedules and Milestone Plans\n\nThis request retrieves all billing schedules, milestone plans, and plan items created for the order.\n\nSets environment variables:\n- billingSchedule[1-3]Id: IDs of billing schedules\n- billingSchedule[1-3]Status: Status of each billing schedule\n- billingMilestonePlan[1-3]Id: IDs of milestone plans\n- billingMilestonePlanItem[1-3]Id: IDs of milestone plan items\n\nUses environment variables:\n- orderId: Order to query schedules for\n- versionPath: API version path"
          },
          "response": []
        }
      ]
    },
    {
      "name": "invoice",
      "description": "Generate and manage invoices for billing schedules. This folder contains requests to create and query invoices based on milestone completion.",
      "item": [
        {
          "name": "invoice-first-bmpi",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment')",
                  "",
                  "pm.environment.set(\"milestone1Date\", moment().add(1, 'month').format(\"YYYY-MM-DD\"))",
                  "pm.environment.set(\"milestone2Date\", moment().add(2, 'month').format(\"YYYY-MM-DD\"))",
                  "pm.environment.set(\"milestone3Date\", moment().add(3, 'month').format(\"YYYY-MM-DD\"))"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "isAsync",
                "value": "true",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"billingScheduleIds\": [\n    \"{{billingSchedule1Id}}\"\n  ],\n  \"action\": \"Posted\",\n  \"targetDate\": \"{{milestone1Date}}\",\n  \"invoiceDate\": \"{{$currentDate}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/commerce/invoicing/invoices/collection/actions/generate",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "commerce",
                "invoicing",
                "invoices",
                "collection",
                "actions",
                "generate"
              ]
            },
            "description": "Step 9: Generate Invoice for First Milestone\n\nThis request generates an invoice for the first billing milestone plan item.\n\nUses environment variables:\n- billingSchedule1Id: Billing schedule to invoice\n- milestone1Date: Target date for milestone completion\n- accessToken: Authentication token\n- versionPath: API version path"
          },
          "response": []
        },
        {
          "name": "query-invoice-and-related-records",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json()",
                  "",
                  "jsonData.compositeResponse[0].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"invoiceLine\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"invoice\" + (index + 1) + \"Id\", record.invoiceId)",
                  "  pm.environment.set(\"invoice\" + (index + 1) + \"Status\", record.Invoice.Status)",
                  "})",
                  "",
                  "jsonData.compositeResponse[1].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingSchedule\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingSchedule\" + (index + 1) + \"Status\", record.Status)",
                  "})",
                  "",
                  "jsonData.compositeResponse[2].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingMilestonePlan\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingMilestonePlan\" + (index + 1) + \"Status\", record.Status)",
                  "})",
                  "",
                  "jsonData.compositeResponse[3].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingMilestonePlanItem\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingMilestonePlanItem\" + (index + 1) + \"Status\", record.Status)",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.environment.set(\"$invLineFieldsToQuery\", \"Id, InvoiceId, Invoice.status\")",
                  "pm.environment.set(\"$bsFieldsToQuery\", \"Id, Status\")",
                  "pm.environment.set(\"$bmpFieldsToQuery\", \"Id, Status\")",
                  "pm.environment.set(\"$bmpiFieldsToQuery\", \"Id, MilestoneAccomplishmentDate, Status\")"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"allOrNone\": false,\n  \"compositeRequest\": [\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$invLineFieldsToQuery}} FROM InvoiceLine WHERE billingScheduleId = '{{billingSchedule1Id}}'\",\n      \"referenceId\": \"invoiceLines\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$bsFieldsToQuery}} FROM BillingSchedule WHERE Id = '{{billingSchedule1Id}}'\",\n      \"referenceId\": \"billingSchedule\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$bmpFieldsToQuery}} FROM BillingMilestonePlan WHERE ReferenceItemId = '{{billingSchedule1Id}}'\",\n      \"referenceId\": \"billingMilestonePlan\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$bmpiFieldsToQuery}} FROM BillingMilestonePlanItem WHERE BillingMilestonePlanId = '@{billingMilestonePlan.records[0].Id}' ORDER BY MilestoneAccomplishmentDate\",\n      \"referenceId\": \"billingMilestonePlanItems\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/composite",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "composite"
              ]
            },
            "description": "Step 10: Query Generated Invoice and Related Records\n\nThis request retrieves the generated invoice and all related records to verify the invoice generation.\n\nSets environment variables:\n- invoiceLine[1-3]Id: IDs of invoice lines\n- invoice[1-3]Id: IDs of invoices\n- invoice[1-3]Status: Status of each invoice\n- billingSchedule[1-3]Status: Updated status of billing schedules\n- billingMilestonePlan[1-3]Status: Updated status of milestone plans\n\nUses environment variables:\n- billingSchedule1Id: Billing schedule to query\n- versionPath: API version path"
          },
          "response": []
        },
        {
          "name": "invoice-all-bmpis",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment')",
                  "",
                  "pm.environment.set(\"milestone1Date\", moment().add(1, 'month').format(\"YYYY-MM-DD\"))",
                  "pm.environment.set(\"milestone2Date\", moment().add(2, 'month').format(\"YYYY-MM-DD\"))",
                  "pm.environment.set(\"milestone3Date\", moment().add(3, 'month').format(\"YYYY-MM-DD\"))"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "isAsync",
                "value": "true",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"billingScheduleIds\": [\n    \"{{billingSchedule1Id}}\"\n  ],\n  \"action\": \"Posted\",\n  \"targetDate\": \"{{milestone3Date}}\",\n  \"invoiceDate\": \"{{$currentDate}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/commerce/invoicing/invoices/collection/actions/generate",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "commerce",
                "invoicing",
                "invoices",
                "collection",
                "actions",
                "generate"
              ]
            },
            "description": "Step 11: Generate Invoices for All Remaining Milestones\n\nThis request generates invoices for all remaining milestone plan items up to the third milestone.\n\nUses environment variables:\n- billingSchedule1Id: Billing schedule to invoice\n- milestone3Date: Target date for final milestone\n- accessToken: Authentication token\n- versionPath: API version path"
          },
          "response": []
        },
        {
          "name": "query-invoice-and-related-records",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json()",
                  "",
                  "jsonData.compositeResponse[0].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"invoiceLine\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"invoice\" + (index + 1) + \"Id\", record.invoiceId)",
                  "  pm.environment.set(\"invoice\" + (index + 1) + \"Status\", record.Invoice.Status)",
                  "})",
                  "",
                  "jsonData.compositeResponse[1].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingSchedule\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingSchedule\" + (index + 1) + \"Status\", record.Status)",
                  "})",
                  "",
                  "jsonData.compositeResponse[2].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingMilestonePlan\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingMilestonePlan\" + (index + 1) + \"Status\", record.Status)",
                  "})",
                  "",
                  "jsonData.compositeResponse[3].body.records.forEach((record, index) => {",
                  "  pm.environment.set(\"billingMilestonePlanItem\" + (index + 1) + \"Id\", record.Id)",
                  "  pm.environment.set(\"billingMilestonePlanItem\" + (index + 1) + \"Status\", record.Status)",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.environment.set(\"$invLineFieldsToQuery\", \"Id, InvoiceId, Invoice.status\")",
                  "pm.environment.set(\"$bsFieldsToQuery\", \"Id, Status\")",
                  "pm.environment.set(\"$bmpFieldsToQuery\", \"Id, Status\")",
                  "pm.environment.set(\"$bmpiFieldsToQuery\", \"Id, MilestoneAccomplishmentDate, Status\")"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"allOrNone\": false,\n  \"compositeRequest\": [\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$invLineFieldsToQuery}} FROM InvoiceLine WHERE billingScheduleId = '{{billingSchedule1Id}}'\",\n      \"referenceId\": \"invoiceLines\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$bsFieldsToQuery}} FROM BillingSchedule WHERE Id = '{{billingSchedule1Id}}'\",\n      \"referenceId\": \"billingSchedule\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$bmpFieldsToQuery}} FROM BillingMilestonePlan WHERE ReferenceItemId = '{{billingSchedule1Id}}'\",\n      \"referenceId\": \"billingMilestonePlan\"\n    },\n    {\n      \"method\": \"GET\",\n      \"url\": \"{{versionPath}}/query/?q=SELECT {{$bmpiFieldsToQuery}} FROM BillingMilestonePlanItem WHERE BillingMilestonePlanId = '@{billingMilestonePlan.records[0].Id}' ORDER BY MilestoneAccomplishmentDate\",\n      \"referenceId\": \"billingMilestonePlanItems\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}{{versionPath}}/composite",
              "host": [
                "{{baseUrl}}{{versionPath}}"
              ],
              "path": [
                "composite"
              ]
            },
            "description": "Step 12: Query All Generated Invoices\n\nThis request retrieves all invoices and related records to verify complete invoice generation.\n\nSets environment variables:\n- invoiceLine[1-3]Id: IDs of all invoice lines\n- invoice[1-3]Id: IDs of all invoices\n- invoice[1-3]Status: Final status of all invoices\n- billingSchedule[1-3]Status: Final status of billing schedules\n- billingMilestonePlan[1-3]Status: Final status of milestone plans\n\nUses environment variables:\n- billingSchedule1Id: Billing schedule to query\n- versionPath: API version path"
          },
          "response": []
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ]
}
